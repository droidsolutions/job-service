name: main
on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3.0.3
        with:
          dotnet-version: "7.0.x"
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - run: dotnet build
      - run: npm ci
      - run: npx tsc
      - run: npm run lint
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: |
            dist
            !dist/test
  coverage:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet/sdk:7.0
    name: coverage
    services:
      # Label used to access the service container
      postgres:
        image: postgres:14
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: apitest
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - run: dotnet test /p:CollectCoverage=true
      - name: publish coverage report to coveralls.io
        uses: coverallsapp/github-action@v2.0.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage/coverage.info
          format: lcov
  release:
    name: Semantic Release
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    runs-on: ubuntu-latest
    needs:
      - build
      - coverage
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - uses: actions/setup-dotnet@v3.0.3
        with:
          dotnet-version: "7.0.x"
      - name: Install packages
        run: npm ci
      - name: Download dist from build
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/
      - name: Semantic Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NUGET_TOKEN: ${{ secrets.NUGET_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
